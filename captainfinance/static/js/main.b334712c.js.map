{"version":3,"file":"static/js/main.b334712c.js","mappings":"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","sources":["app/services/DateAsString.tsx","styles.ts","app/components/AmountSummary.tsx","app/components/BurndownChart.tsx","app/components/DailyTransactionItem.tsx","app/components/LatestTransactions.tsx","app/components/MenuBar.tsx","app/components/TransactionsContainer.tsx","app/actions/global.tsx","app/actions/savings.tsx","app/pages/HomePage.tsx","app/components/RecurringItem.tsx","app/components/RecurringTransactions.tsx","app/pages/RecurringConfigurationPage.tsx","app/actions/transactions.tsx","app/actions/categories.tsx","app/components/ItemEdition.tsx","app/pages/EditTransactionItemPage.tsx","app/states/reducers.tsx","app/states/store.tsx","app/pages/StatisticsPage.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["\nexport namespace date {\n\n    const monthNames = [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\",\n                        \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"];\n\n    export const GetNumberOfDaysInCurrentMonth = (today: Date) => {\n        console.log(\"GetNumberOfDaysInCurrentMonth\")\n        console.log(today)\n        const numberOfDays = new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate();\n        console.log(numberOfDays)\n        return numberOfDays;\n    }\n    \n    export const GetMonthAsString = (date: Date | undefined) => {\n        if(!date) return \"\";\n        return monthNames[date.getMonth()]\n    }\n\n    export const AsString = (date: Date | undefined) => {\n        if(!date) return \"\";\n        const yyyy = date.getFullYear();\n        let dd = date.getDate();\n        let mm = date.getMonth() + 1;\n        let dateStr = '';\n        if (dd < 10) {\n            dateStr = '0';\n        }\n        dateStr += String(dd) + \"/\";\n        if (mm < 10) {\n            dateStr += '0';\n        }\n        dateStr += String(mm) + \"/\" + yyyy;\n        return dateStr;\n    }\n\n    export const AsDatabaseString= (date: Date | undefined) => {\n        //\"2023-04-20\"\n        if(!date) return \"\";\n        const yyyy = date.getFullYear();\n        let dd = date.getDate();\n        let mm = date.getMonth() + 1;\n        let dateStr = yyyy + '-';\n        if (mm < 10) {\n            dateStr += '0';\n        }\n        dateStr += String(mm) + \"-\";\n        if (dd < 10) {\n            dateStr += '0';\n        }\n        dateStr += String(dd);\n        return dateStr;\n    }\n\n    export const GetFirstDayOfMonth = () => {\n        const today = new Date();\n        const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);\n        return AsDatabaseString(firstDay);\n    }\n    export const GetLastDayOfMonth = () => {\n        const today = new Date();\n        const lastDay = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n        return AsDatabaseString(lastDay);\n    }\n\n    export const GetMonthKey = (date: Date) => {\n        const month = Number(date.getMonth()+1).toString().padStart(2, '0');\n        const dateKey = date.getFullYear() + '_' + month;\n        return dateKey;\n    }\n\n    export const GetKeyDisplay = (key: string) => {\n        const arr = key.split(\"_\");\n        \n        const month = Number(arr[1]);\n        const year = arr[0];\n        return monthNames[(month-1)] + \" \" + year;\n    }\n    \n}","import { StyleSheet } from \"react-native\";\n\nexport const styles = StyleSheet.create({\n    amountSummary: {\n        height: 100,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    white: {\n        color: \"#fff\"\n    },\n    roundTabButton: {\n        backgroundColor: \"#607d8b\",\n        borderRadius: 40,\n        elevation: 6,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        marginRight: 5,\n        marginLeft: 5\n    },\n    roundTabButtonSelected: {\n        backgroundColor: \"#e91e63\",\n    },\n    roundTabButtonText: {\n    },\n    button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        elevation: 6,\n        backgroundColor: '#FFD700'\n    },\n    vCenterContent: {\n        marginTop: \"auto\",\n        marginBottom: 50\n    },\n    actionText: {\n        color: \"#303030\",\n        fontSize: 20,\n        textAlign: \"center\",\n    },\n    content: {\n        backgroundColor: \"#303030\",\n        flex: 1\n    },\n    bgDark: {\n        backgroundColor: \"#303030\"\n    }\n  });","import { Easing, Pressable, StyleSheet, Text, View } from \"react-native\";\nimport { date } from \"../services/DateAsString\";\nimport { useSelector } from \"react-redux\";\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\nimport { RefObject, createRef, useEffect } from \"react\";\n\nexport function AmountSummary({ navigation }) {\n\n  const today = new Date();\n  const numberOfDaysUntilEndOfMonth = (new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate() - today.getDate()) + 1;\n\n  const availableMonthlyAmount = useSelector(state => state.transactions.availableMonthlyAmount);\n  const availableDailyAmount = useSelector( state => state.transactions.availableDailyAmount );\n  const realAvailableAmountPerDay = useSelector(state => state.transactions.realAvailableAmountPerDay);\n  const remainingAmountAsPerToday = realAvailableAmountPerDay.at(today.getDate() - 1);\n  const amountPerDayUntilEndOfMonth = Number((remainingAmountAsPerToday / numberOfDaysUntilEndOfMonth).toFixed(2));\n\n  const currentMonthDailyTransactions = useSelector(state => state.transactions.currentMonthDailyTransactions);\n  const totalSpent = currentMonthDailyTransactions.reduce((acc, transaction) => { return acc + transaction.amount; }, 0);\n  const dailyAmountSpent = -1 * (totalSpent / today.getDate());\n\n  const red = \"#e91e63\";\n  const orange = \"#e9a41e\";\n  const green = \"#1ee9a4\";\n  \n  let circularProgressRef: RefObject<AnimatedCircularProgress> = createRef();\n  let fill = (remainingAmountAsPerToday / availableMonthlyAmount) * 100;\n\n  useEffect(() => {\n    console.log(\"Use effect\")\n      if(availableMonthlyAmount !== 0) {\n        const newFill = (remainingAmountAsPerToday / availableMonthlyAmount) * 100;\n        circularProgressRef?.current?.animate(newFill, 400, Easing.ease);\n      }\n  }, [remainingAmountAsPerToday, availableMonthlyAmount]);\n  \n  const tintColor = () => {\n    if (fill >= 70) {\n      return green;\n    } else if (fill >= 30) {\n      return orange;\n    }\n    return red;\n  };\n\n\n  const formatNumber = (num: number) => {\n    if (num < 100000) return num.toFixed(2);\n    return (num / 1000).toFixed() + \"k\";\n  }\n\n  return (\n    <View style={styles.amountSummary}>\n      <Text style={[styles.white, { fontWeight: \"bold\", fontSize: 20, textAlign: \"center\" }]}>{date.GetMonthAsString(today)}</Text>\n\n      <View style={{ flexDirection: \"row\", paddingBottom: 5, marginTop: 5 }} >\n        <View style={ { flex: 1}} >\n        </View>\n        \n        <View style={ { }} >\n          <AnimatedCircularProgress\n            size={160}\n            width={15}\n            ref={circularProgressRef}\n            fill={0}\n            rotation={-100}\n            arcSweepAngle={200}\n            lineCap=\"round\"\n            tintColor={tintColor()}\n            backgroundColor=\"#3d5875\">\n            {\n              (fill) => (\n                <>\n                  <Text style={[styles.white, { fontWeight: \"bold\", fontSize: 18 }]} >{formatNumber(remainingAmountAsPerToday)} €</Text>\n                  <Text style={[styles.white, { fontSize: 14 }]}>{formatNumber(amountPerDayUntilEndOfMonth)} € / jour </Text>\n                  <Text style={[styles.white, { fontSize: 12 }]}>Dépensé</Text>\n                  <Text style={[styles.white, { fontSize: 10, paddingBottom: 15 }]}>{dailyAmountSpent?.toFixed(2)} € / jour </Text>\n                </>\n              )\n            }\n          </AnimatedCircularProgress>\n        </View>\n\n        <View style={ { flex: 1 }} >\n          <View style={ { flex: 1, marginLeft: \"auto\", marginRight: 10 }} >\n            <Text style={[styles.white, { fontSize: 12}]}>Théorique</Text>\n            <Text style={[styles.white, { fontSize: 13}]}>{availableMonthlyAmount?.toFixed(2)} €</Text>\n            <Text style={[styles.white, { fontSize: 12}]}>{availableDailyAmount?.toFixed(2)} € / jour</Text>\n          </View>\n        </View>\n      </View>\n\n    </View>\n  );\n}\n\n\n\nexport const styles = StyleSheet.create({\n  amountSummary: {\n    marginBottom: -50\n  },\n  white: {\n    color: \"#fff\"\n  }\n});","import { Dimensions, View } from \"react-native\";\r\nimport { LineChart } from \"react-native-chart-kit\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport function BurndownChart() {\r\n    \r\n  const theoriticalAvailableAmountPerDay = useSelector( state => state.transactions.theoriticalAvailableAmountPerDay );\r\n  const realAvailableAmountPerDay = useSelector( state => state.transactions.realAvailableAmountPerDay );\r\n\r\n  const today = new Date();\r\n  const numberOfDays = new Date(today.getFullYear(), today.getMonth()+1, 0).getDate();\r\n\r\n  const getDaysOfMonth = () => {\r\n    let dayOfMonth = [];\r\n    for(let i = 0 ; i < numberOfDays; ++i) {\r\n      dayOfMonth.push((i+1).toString());\r\n    }\r\n    return dayOfMonth;\r\n  }\r\n  const getHidePointsAt = () => {\r\n    let hidePointsAt = [1,2,3,5,6,7,8,10,11,12,13,15,16,17,18,20,21,22,23,25,26,27];\r\n    if(numberOfDays >= 30) {\r\n      hidePointsAt.push(28);\r\n    }\r\n    if(numberOfDays >= 31) {\r\n      hidePointsAt.push(29);\r\n    }\r\n    return hidePointsAt;\r\n  }\r\n\r\n  const days = getDaysOfMonth();\r\n  const hidePointsAt = getHidePointsAt();\r\n\r\n  const withDots = realAvailableAmountPerDay.length === 1;\r\n\r\n  return (\r\n    <View style={ { alignSelf: \"center\"}}>\r\n      { (theoriticalAvailableAmountPerDay!.length > 0 && realAvailableAmountPerDay!.length > 0 && days!.length > 0 && hidePointsAt!.length > 0) && \r\n        <LineChart\r\n          data={{\r\n            labels: days,\r\n            datasets: [\r\n              {\r\n                data: theoriticalAvailableAmountPerDay,\r\n                withDots: false,\r\n                color: (opacity = 1) => `rgba(255, 0, 0, ${opacity})`\r\n              }, \r\n              { data: realAvailableAmountPerDay, withDots: withDots },\r\n              { data: days.map( _=> 0),\r\n                strokeWidth: 1,\r\n                withDots: false,\r\n                color: (opacity = 1) => `rgba(255, 0, 0, 1)` }\r\n            ]\r\n          }}\r\n          width={Math.min(Dimensions.get(\"window\").width - 20, 580)} // from react-native\r\n          yLabelsOffset={5}\r\n          height={220}\r\n          yAxisSuffix=\"€\"\r\n          hidePointsAtIndex={ hidePointsAt }\r\n          yAxisInterval={5}\r\n          chartConfig={{\r\n            backgroundGradientFrom: \"#fff\",\r\n            backgroundGradientTo: \"#fff\",\r\n            decimalPlaces: 0,\r\n            fillShadowGradientFrom: \"#fff\",\r\n            fillShadowGradientTo: \"#fff\",\r\n            color: (opacity = 1) => `rgba(100, 100, 255, 1)`,\r\n            labelColor: (opacity = 1) => `rgba(0, 0, 0, 1)`,\r\n            propsForBackgroundLines: {\r\n              strokeOpacity: 0.3\r\n            },\r\n            useShadowColorFromDataset: true,\r\n            propsForDots: {\r\n              r: \"1\",\r\n              strokeWidth: \"5\",\r\n              stroke: \"blue\"\r\n            }\r\n          }}\r\n          style={{\r\n            //marginVertical: 8,\r\n            borderRadius: 8\r\n          }}\r\n        />\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst chartConfig = {\r\n  backgroundGradientFrom: \"#1E2923\",\r\n  backgroundGradientFromOpacity: 0,\r\n  backgroundGradientTo: \"#08130D\",\r\n  backgroundGradientToOpacity: 0.5,\r\n  color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n  strokeWidth: 2, // optional, default 3\r\n  barPercentage: 0.5,\r\n  useShadowColorFromDataset: false // optional\r\n};","import { Pressable, StyleSheet, Text, View } from \"react-native\";\nimport { date } from \"../services/DateAsString\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Transaction } from \"../models/transaction\";\n\nexport function DailyTransactionItem(props) {\n    const item: Transaction = props.item;\n\n    const navigation = useNavigation();\n    function editItem(): void {\n        const isExpense = item.amount <= 0;\n        navigation.navigate('EditTransactionItemPage', { item, isExpense, recurring: false });\n    }\n\n    return (\n      <View>\n        <Pressable onPress={() => editItem() } style={ itemStyle.container } >\n            <View style={ { flexDirection: \"row\", alignItems: \"center\"}}>\n                <View style={ { flexDirection: \"column\"} }>\n                    <Text style={ { color: \"#525174\", fontSize: 15 } } >{item.label}</Text>\n                    <Text style={ { fontSize: 10 } } >{ date.AsString(new Date(item.date)) } </Text>\n                    {/* <Text style={ { fontSize: 10 } } > month: {item.month} - year: {item.fullYear} </Text> */}\n                </View>\n                <Text style={ [{ marginLeft: \"auto\", fontWeight: \"bold\" }, item.amount > 0 ? {color: \"#06d6a0\"}: {color: \"#ef476f\"}] } >{item.amount.toFixed(2)} €</Text>\n            </View>\n        </Pressable>\n      </View>\n    );\n}\n\nconst itemStyle = StyleSheet.create({\n    container: {\n        backgroundColor: \"#fff\",\n        borderColor: \"#525174\",\n        borderWidth: 1,\n        padding: 8,\n    }\n});","import { FlatList, SafeAreaView, View, Text, Pressable } from \"react-native\";\nimport { styles } from '../../styles';\nimport { DailyTransactionItem } from \"./DailyTransactionItem\";\nimport { useSelector } from \"react-redux\";\nimport { Transaction } from \"../models/transaction\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport function LatestTransactions() {\n  const navigation = useNavigation();\n  \n  const dailyTransactions = useSelector( state => state.transactions.currentMonthDailyTransactions);\n\n  function viewStats(): void {\n    navigation.navigate('StatisticsPage');\n  }\n\n  function sortTransactions(a: Transaction, b: Transaction): number {\n    if(!a.date || !b.date) {\n      return 0;\n    }\n    if(new Date(a.date) < new Date(b.date) ) {\n      return 1;\n    }\n    if(new Date(a.date) > new Date(b.date) ) {\n      return -1;\n    }\n    return 0;    \n  }\n  \n\n  return (\n    <View style={ styles.content }>\n      <SafeAreaView style={ [styles.content, { marginTop: 5 }] }>\n        <Pressable  style={ { flexDirection: \"row\", alignSelf: \"flex-end\", marginRight: 10 } } onPress={ () => viewStats() }>\n          <Text style={ { color: \"#fff\", marginRight: 5, fontSize: 10, alignSelf: \"baseline\"} }>Voir statistiques</Text>\n          <Ionicons name=\"md-stats-chart\" size={15} color=\"#fff\" style={{zIndex: 3, height: 15, marginBottom: 5, alignSelf: \"baseline\" }} />\n        </Pressable >\n        <FlatList \n            data={dailyTransactions.sort(sortTransactions) }\n            renderItem={({item}) => <DailyTransactionItem item={item}></DailyTransactionItem>}\n        />\n      </SafeAreaView>\n    </View>\n  );\n}","import { Pressable, Text, View } from \"react-native\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\n\nexport function MenuBar(props) {\n  \n  const isRecurring: boolean = props.recurring;\n  const { navigation } = props;\n  \n  function openRecurringConfigurationPage(): void {\n    navigation.navigate('RecurringConfigurationPage');\n  }\n\n  function addExpense(): void {\n    navigation.navigate('EditTransactionItemPage', { item: null, isExpense: true, recurring: isRecurring });\n  }\n\n  function addIncome(): void {\n    navigation.navigate('EditTransactionItemPage', { item: null, isExpense: false, recurring: isRecurring });\n  }\n\n  function goHome(): void {\n    navigation.navigate('HomePage');\n  }\n\n  function openConfiguration(): void {\n  }\n\n\n\n  return (\n\n    <View style={{ flexDirection: \"row\", margin: 5, alignItems: \"center\" }}>\n      <View style={{ flex: 1 }}>\n        { isRecurring ?\n          <Ionicons name=\"md-arrow-back\" size={32} color=\"#fff\" onPress={ () => goHome() } />\n          :\n          <Pressable style={{ flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", marginRight: \"auto\" }} onPress={() => openConfiguration()}>\n            {/* <Ionicons name=\"md-settings\" size={15} color=\"#fff\" style={{ zIndex: 4, height: 15, marginBottom: 5 }} />\n            <Text style={{ color: \"#fff\", marginRight: 5, fontSize: 10, alignSelf: \"baseline\" }}>Configuration</Text> */}\n            <Ionicons name=\"md-settings\" size={15} color=\"#303030\" style={{ zIndex: 4, height: 15, marginBottom: 5 }} />\n            <Text style={{ color: \"#303030\", marginRight: 5, fontSize: 10, alignSelf: \"baseline\" }}>Configuration</Text>\n          </Pressable >\n        }\n      </View>\n\n      <View style={{ flexDirection: \"row\", marginLeft: \"auto\", marginRight: \"auto\", marginBottom: -20 }}>\n        <Ionicons name=\"md-add-circle\" size={70} style={{zIndex: 3, bottom: 25 }} color=\"#1ee9a4\" onPress={ () => addIncome() } />\n        <Ionicons name=\"md-remove-circle\" size={70} color=\"#e91e63\" style={{zIndex: 3, bottom: 25 }} onPress={ () => addExpense() } />\n      </View>\n\n      <View style={{ flex: 1 }}>\n        { !isRecurring &&\n          <Pressable style={ { marginLeft: \"auto\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", alignContent: \"center\" }} onPress={ () => openRecurringConfigurationPage() }>\n              <Ionicons name=\"md-sync-circle-outline\" size={15} color=\"#fff\" style={{zIndex: 3, height: 15, marginBottom: 5 }} />\n              <Text style={ { color: \"#fff\", marginRight: 5, fontSize: 10} }>Transactions</Text>\n              <Text style={ { color: \"#fff\", marginRight: 5, fontSize: 10} }>récurrentes</Text>\n            </Pressable >\n        }\n      </View>\n\n    </View>\n  \n    // <View style={{ height: 70 }} >\n    //   <View style={{ flexDirection: \"row\", justifyContent: \"flex-start\", alignContent: \"flex-start\", alignSelf: 'center', backgroundColor: '#303030', \n    //                  width: 135, height: 50, \n    //                  borderBottomEndRadius: 30, borderBottomStartRadius: 30, left: 0, bottom: 0, zIndex: 2 }}>\n    //     <Ionicons name=\"md-add-circle\" size={70} color=\"#1ee9a4\" style={{zIndex: 3, bottom: 20, height: 70 }} onPress={ () => addIncome() } />\n    //     <Ionicons name=\"md-remove-circle\" size={70} color=\"#e91e63\" style={{zIndex: 3, bottom: 20, height: 70}} onPress={ () => addExpense() } />\n    //   </View>\n    //   <View style={{ position: 'absolute', backgroundColor: '#303030', bottom: 0, zIndex: 1, width: '100%', height: 60, \n    //     flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 10, paddingVertical: 10 }}>\n        \n    //     { isRecurring && <View style={{flex: 1, marginRight: \"auto\"}}>\n    //       <Ionicons name=\"md-arrow-back\" size={32} color=\"#fff\" onPress={ () => goHome() } />\n    //     </View> }\n\n    //     { !isRecurring &&\n    //       <Pressable  style={ { flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", marginRight: \"auto\" }} onPress={ () => openConfiguration() }>\n    //         <Ionicons name=\"md-settings\" size={15} color=\"#fff\" style={{zIndex: 4, height: 15, marginBottom: 5 }} />\n    //         <Text style={ { color: \"#fff\", marginRight: 5, fontSize: 10, alignSelf: \"baseline\"} }>Configuration</Text>\n    //       </Pressable >\n    //     }\n\n    //     {/* { !isRecurring && <Ionicons name=\"md-settings\" size={15} color=\"#fff\" /> } */}\n    //     {/* { isRecurring && <Ionicons name=\"md-arrow-back\" size={32} color=\"#fff\" onPress={ () => goHome() } /> } */}\n        \n\n    //     { !isRecurring &&\n    //       <Pressable style={ { marginLeft: \"auto\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }} onPress={ () => openRecurringConfigurationPage() }>\n    //         <Ionicons name=\"md-sync-circle-outline\" size={15} color=\"#fff\" style={{zIndex: 3, height: 15, marginBottom: 5 }} />\n    //         <Text style={ { color: \"#fff\", marginRight: 5, fontSize: 10, alignSelf: \"baseline\"} }>Transactions</Text>\n    //         <Text style={ { color: \"#fff\", marginRight: 5, fontSize: 10, alignSelf: \"baseline\"} }>récurrentes</Text>\n    //       </Pressable >\n    //     }\n\n        \n    //     {/* <View style={{ flexDirection: 'row' }}>\n          \n    //       { !isRecurring && <Ionicons name=\"md-calendar\" size={32} color=\"#fff\" style={{ marginLeft: 20 }} onPress={ () => openRecurringConfigurationPage() }/> }\n    //     </View> */}\n    //   </View>\n    // </View>\n  );\n}\n","import { Pressable, Text, View} from \"react-native\";\r\nimport { AmountSummary } from '../components/AmountSummary';\r\nimport { BurndownChart } from '../components/BurndownChart';\r\nimport { LatestTransactions } from '../components/LatestTransactions';\r\nimport { MenuBar } from \"./MenuBar\";\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\n\r\nexport function TransactionsContainer( {navigation} ) {\r\n\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: \"space-between\"}}>\r\n            <View>\r\n                <AmountSummary navigation={navigation}/>\r\n                <BurndownChart />\r\n            </View>\r\n            <LatestTransactions />\r\n            <MenuBar navigation={navigation} recurring={false}></MenuBar>\r\n        </View>\r\n    );\r\n}\r\n\r\n","export const RESET_STORE = 'RESET_STORE';\r\nexport const SET_TODAY = 'SET_TODAY';\r\n\r\n\r\nexport const resetStore = (today: Date) => ({ type: RESET_STORE, today });\r\nexport const setToday = (today: Date) => ({ type: SET_TODAY, today });\r\n","import { Saving } from \"../models/saving\";\r\nimport * as Crypto from 'expo-crypto';\r\nimport { date } from \"../services/DateAsString\";\r\n\r\nexport const INSERT_SAVING = 'INSERT_SAVING';\r\n\r\nexport interface SavingAction {\r\n    type: string;\r\n    saving: Saving;\r\n};\r\n\r\nexport const insertSaving = (savingDate: Date, amount: number) => ({ type: INSERT_SAVING, saving: { \r\n    saving_id: Crypto.randomUUID(),\r\n    key: date.GetMonthKey(savingDate),\r\n    savingDate,\r\n    amount\r\n} });\r\n","import { Button, StyleSheet, View, Modal, Text } from \"react-native\";\nimport { styles } from '../../styles';\nimport { useEffect, useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { TransactionsContainer } from \"../components/TransactionsContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setToday } from \"../actions/global\";\nimport { date } from \"../services/DateAsString\";\nimport { insertSaving } from \"../actions/savings\";\nimport { addTransaction } from \"../actions/transactions\";\n\nexport const HomePage = ({ navigation }) => {\n   \n    const dispatch = useDispatch();\n    const recurringTransactions = useSelector( state => state.transactions.recurringTransactions );\n    const allTransactionPerMonth = useSelector( state => state.transactions.allTransactionPerMonth );\n    const savings = useSelector( state => state.savings );\n    const [savingsModalVisible, setSavingsModalVisible] = useState(false);\n    const [currentSaving, setCurrentSaving] = useState(0);\n    const [lastMonth, setLastMonth] = useState(new Date());\n\n    const computeSaving = (recTrans: [], dailyTrans: []) => {\n        const totalRecurring = recTrans.reduce((acc, transaction) => { return acc + transaction.amount; }, 0);\n        const totalDaily = dailyTrans.reduce((acc, transaction) => { return acc + transaction.amount; }, 0);\n        return totalRecurring + totalDaily;\n    }\n    \n    useEffect(() => {\n        if (recurringTransactions.length === 0) {\n          navigation.navigate('RecurringConfigurationPage');\n        }\n    }, [recurringTransactions]);\n\n    useEffect(() => {\n        // const today = new Date();\n        // const futureDate = new Date(today.getFullYear(), today.getMonth(), 15)\n        dispatch(setToday(new Date()));\n        // dispatch(setToday(futureDate));\n        let lastMonth = new Date();\n        lastMonth.setDate(1);\n        lastMonth.setMonth(lastMonth.getMonth()-1);\n        const lastMonthKey = date.GetMonthKey(lastMonth);\n        setLastMonth(lastMonth);\n        if(!savings[lastMonthKey] && allTransactionPerMonth[lastMonthKey] && \n            allTransactionPerMonth[lastMonthKey].recurringTransactions && allTransactionPerMonth[lastMonthKey].dailyTransactions) {\n                const recTrans = allTransactionPerMonth[lastMonthKey].recurringTransactions;\n                const dailyTrans = allTransactionPerMonth[lastMonthKey].dailyTransactions;\n            const saving = computeSaving(recTrans, dailyTrans);\n            setCurrentSaving(saving);\n            setSavingsModalVisible(true);\n        }\n        // dispatch(setToday(futureDate));\n        // dispatch(resetStore(new Date()));\n        // const today = new Date();\n        // const pastDate = new Date(today.getFullYear(), today.getMonth(), 8)\n        // dispatch(addTransaction('Salaire Clement', 3100, 'SALAIRE', undefined, true));\n        // dispatch(addTransaction('Casino', -23.25, 'TEST', new Date(today.getFullYear(), today.getMonth(), 5)));\n        // dispatch(addTransaction('Livres', -65.02, 'TEST', new Date(today.getFullYear(), today.getMonth(), 10)));\n        // dispatch(addTransaction('Révision Voiture', -150, 'TEST', new Date(today.getFullYear(), today.getMonth(), 10)));\n        // dispatch(addTransaction('Essence', -51.5, 'TEST', new Date(today.getFullYear(), today.getMonth(), 11)));\n        // dispatch(addTransaction('Casino', -51.5, 'TEST', new Date(today.getFullYear(), today.getMonth(), 12)));\n        // dispatch(addTransaction('Amazon', -51.5, 'TEST', new Date(today.getFullYear(), today.getMonth(), 13)));\n        // dispatch(addTransaction('Test PAST', -51.5, 'TEST', new Date(today.getFullYear(), today.getMonth(), 14)));\n    }, []);\n\n    function onUserCloseSavingModal() {\n        setSavingsModalVisible(false);\n        dispatch(insertSaving(lastMonth, currentSaving));\n    }\n\n    return (\n        <SafeAreaView style={[styles.content]}>\n            <View style={{ flex: 1}}>\n              <TransactionsContainer navigation={navigation}></TransactionsContainer>\n              <Modal\n                  animationType=\"slide\"\n                  transparent={true}\n                  visible={savingsModalVisible}\n                  onRequestClose={() => { setSavingsModalVisible(!savingsModalVisible); }}>\n                  <View style={modalStyles.centeredView}>\n                      <View style={modalStyles.modalView}>\n                      { currentSaving >= 0 ? \n                          <>\n                          <Text style={modalStyles.modalHeader}>Félcitation !</Text>\n                          <Text style={modalStyles.modalText}> En {date.GetMonthAsString(lastMonth)}, vous avez pu mettre de coté {currentSaving.toFixed(2)} € </Text></>\n                          :\n                          <><Text style={modalStyles.modalHeader}>Attention !</Text>\n                          <Text style={modalStyles.modalText}>Pour le mois de {date.GetMonthAsString(lastMonth)}, vous êtes en déficit de {currentSaving.toFixed(2)} € </Text></>\n                      }\n                      <View style={ {flexDirection: \"row\", justifyContent: \"center\"}}>\n                          <Button onPress={ onUserCloseSavingModal } title=\"Fermer\" color=\"#2ec4b6\" />\n                      </View>\n                      </View>\n                  </View>\n                </Modal>\n            </View>\n        </SafeAreaView>\n    );\n}\n\nconst modalStyles = StyleSheet.create({\n    centeredView: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 22,\n    },\n    modalView: {\n      margin: 20,\n      backgroundColor: 'white',\n      borderRadius: 20,\n      padding: 35,\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 4,\n      elevation: 5,\n    },\n    button: {\n      borderRadius: 20,\n      padding: 10,\n      elevation: 2,\n    },\n    buttonOpen: {\n      backgroundColor: '#F194FF',\n    },\n    buttonClose: {\n      backgroundColor: '#2196F3',\n    },\n    textStyle: {\n      color: 'white',\n      fontWeight: 'bold',\n      textAlign: 'center',\n    },\n    modalText: {\n      marginBottom: 15,\n      textAlign: 'center',\n    },\n    modalHeader: {\n        marginBottom: 15,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 20\n    },\n  });","import { Pressable, StyleSheet, Text, View } from \"react-native\";\r\nimport { date } from \"../services/DateAsString\";\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Transaction } from \"../models/transaction\";\r\n\r\nexport function RecurringItem(props) {\r\n    const item: Transaction = props.item;\r\n    const isExpense: boolean = props.isExpense;\r\n\r\n    const navigation = useNavigation();\r\n    function editItem(): void {\r\n        navigation.navigate('EditTransactionItemPage', { item, isExpense, recurring: true });\r\n    }\r\n\r\n    return (\r\n      <View>\r\n        <Pressable onPress={() => editItem() } style={ itemStyle.container }>\r\n            <View style={ { flexDirection: \"row\", alignItems: \"center\"}}>\r\n                <View style={ { flexDirection: \"column\"} }>\r\n                    <Text style={ { color: \"#525174\", fontSize: 15 } } >{item.label}</Text>\r\n                    {item.date && <Text style={ { fontSize: 10 } } >du { date.AsString(new Date(item.date)) } au { date.AsString(new Date(item.endDate)) } </Text>}\r\n                    {/* <Text style={ { fontSize: 10 } } > month: {item.month} - year: {item.fullYear} </Text> */}\r\n                </View>\r\n                <Text style={ [{ marginLeft: \"auto\", fontWeight: \"bold\" }, item.amount > 0 ? {color: \"#06d6a0\"}: {color: \"#ef476f\"}] } >{item.amount.toFixed(2)} €</Text>\r\n            </View>\r\n        </Pressable>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst itemStyle = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"#fff\",\r\n        borderColor: \"#525174\",\r\n        borderWidth: 1,\r\n        padding: 8,\r\n    }\r\n});","import { FlatList, SafeAreaView, View } from \"react-native\";\r\nimport { styles } from \"../../styles\";\r\nimport { RecurringItem } from \"./RecurringItem\";\r\n\r\nexport function RecurringTransactions(props) {\r\n  const transactions = props.transactions;\r\n  const isExpense: boolean = props.isExpense;\r\n  \r\n  return (\r\n    <View style={ styles.content }>\r\n          <SafeAreaView style={ [styles.content, { marginTop: 5 }] }>\r\n              <FlatList\r\n                  // data={transactions.sort( (a: Transaction, b: Transaction) => a.date && b.date && new Date(a.date) < new Date(b.date) )}\r\n                  data={transactions}\r\n                  renderItem={({item}) => <RecurringItem item={item} isExpense={isExpense} ></RecurringItem>}\r\n              />\r\n          </SafeAreaView>\r\n    </View>\r\n  );\r\n}","import { View, Text, Pressable } from \"react-native\";\nimport { styles } from '../../styles';\nimport { useEffect, useState } from \"react\";\nimport { RecurringTransactions } from \"../components/RecurringTransactions\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { useSelector } from \"react-redux\";\nimport { MenuBar } from \"../components/MenuBar\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\n  \nexport function RecurringConfigurationPage( {navigation} ) {\n\n    const [selectedTab, setSelectedTab] = useState(1);\n    const recurringTransactions = useSelector( state => state.transactions.recurringTransactions );\n    const availableMonthlyAmount = useSelector( state => state.transactions.availableMonthlyAmount );\n    const availableDailyAmount = useSelector( state => state.transactions.availableDailyAmount );\n    const [expensesItems, setExpensesItems] = useState([]);\n    const [incomesItems, setIncomesItems] = useState([]);\n\n\n    useEffect(() => {\n        const expenses = recurringTransactions.filter(item => item.amount < 0);\n        const incomes = recurringTransactions.filter(item => item.amount > 0);\n        setExpensesItems(expenses);\n        setIncomesItems(incomes);\n    }, [recurringTransactions]);\n\n    useEffect(() =>\n        navigation.addListener('beforeRemove', (e) => {\n            if (recurringTransactions.length > 0) {\n                return;\n            }\n            // Prevent default behavior of leaving the screen\n            e.preventDefault();\n        }\n    ), [navigation, recurringTransactions]);\n\n    function goHome(): void {\n        navigation.navigate('HomePage');\n    }\n\n    return (\n        <SafeAreaView style={[styles.content]}>\n\n            {/* <View style={[{ flexDirection: \"row\", justifyContent: \"center\", marginTop: 10}]}>\n                <View style={{flex: 1, marginRight: \"auto\"}}>\n                    <Ionicons name=\"md-arrow-back\" size={32} color=\"#fff\" onPress={ () => goHome() } />\n                </View>\n                <View style={[{ flex: 1, justifyContent: \"center\", alignItems: \"center\", marginLeft: \"auto\"}]}>\n                    <Text style={[styles.white, { fontWeight: \"bold\", fontSize: 13}]}>Reste à vivre</Text>\n                    <Text style={[styles.white, { fontWeight: \"bold\", fontSize: 20}]}>{availableMonthlyAmount?.toFixed(2)} €</Text>\n                    <Text style={[styles.white, { fontSize: 15}]}>{availableDailyAmount?.toFixed(2)} € / jour</Text>\n                </View>\n                <View style={{ flex: 1, marginLeft: \"auto\"}} />\n            </View> */}\n\n            <View style={[{ justifyContent: \"center\", alignItems: \"center\"}]}>\n                <Text style={[styles.white, { fontWeight: \"bold\", fontSize: 13}]}>Reste à vivre</Text>\n                <Text style={[styles.white, { fontWeight: \"bold\", fontSize: 20}]}>{availableMonthlyAmount?.toFixed(2)} €</Text>\n                <Text style={[styles.white, { fontSize: 15}]}>{availableDailyAmount?.toFixed(2)} € / jour</Text>\n            </View>\n\n            <View style={[{ flexDirection: \"row\", justifyContent: \"center\", marginTop: 10}]}>\n                <Pressable style={[styles.roundTabButton, selectedTab == 1 ? styles.roundTabButtonSelected : null ]} onPress={ () => setSelectedTab(1) }>\n                    <Text style={ styles.roundTabButtonText }>Revenus réguliers</Text>\n                </Pressable >\n                <Pressable style={[styles.roundTabButton, , selectedTab == 2 ? styles.roundTabButtonSelected : null]} onPress={ () => setSelectedTab(2) }>\n                    <Text style={ styles.roundTabButtonText }>Dépenses régulières</Text>\n                </Pressable>\n            </View>\n\n            { (selectedTab == 1 && incomesItems.length != 0) &&\n                <View style={[styles.content, { marginTop: 10 }]}>\n                    <RecurringTransactions transactions={incomesItems} isExpense={false} ></RecurringTransactions>\n                </View>\n            }\n            { (selectedTab != 1 && expensesItems.length != 0) &&\n                <View style={[styles.content, { marginTop: 10 }]}>\n                    <RecurringTransactions transactions={expensesItems} isExpense={true} ></RecurringTransactions>\n                </View>\n            }\n\n            { (incomesItems.length == 0 && selectedTab == 1) &&\n                <View style={[styles.content, { marginTop: 10 }]}>\n                    <Text style={ { color: \"#fff\", fontSize: 25, textAlign: \"center\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"auto\", marginBottom: \"auto\"} }> Entrez vos revenus régulier mensuel {\"\\n\"} {\"\\n\"} (Salaire, Allocations, ...) {\"\\n\"}{\"\\n\"} ↓</Text>\n                </View>\n            }\n            { (selectedTab != 1 && expensesItems.length == 0) &&\n                <View style={[styles.content, { marginTop: 10 }]}>\n                    <Text style={ { width: \"80%\", color: \"#fff\", fontSize: 25, textAlign: \"center\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"auto\", marginBottom: \"auto\"} }> Entrez vos dépenses régulières mensuelle {\"\\n\"} {\"\\n\"}(Loyer, Electricité, Internet, ...) {\"\\n\"}{\"\\n\"} ↓</Text>\n                </View>\n            }\n\n            {/* <View style={[{ flexDirection: \"row\", justifyContent: \"center\", marginTop: 10}]}>\n                <Pressable style={[styles.roundTabButton, selectedTab == 1 ? styles.roundTabButtonSelected : null ]} onPress={ () => setSelectedTab(1) }>\n                    <Text style={ styles.roundTabButtonText }>Revenus réguliers</Text>\n                </Pressable >\n                <Pressable style={[styles.roundTabButton, , selectedTab == 2 ? styles.roundTabButtonSelected : null]} onPress={ () => setSelectedTab(2) }>\n                    <Text style={ styles.roundTabButtonText }>Dépenses régulières</Text>\n                </Pressable>\n            </View> */}\n\n            <MenuBar navigation={navigation} recurring={true}></MenuBar>\n\n        </SafeAreaView>\n    );\n}","import { Transaction } from \"../models/transaction\";\nimport * as Crypto from 'expo-crypto';\n\nexport const ADD_RECURRING_TRANSACTION = 'ADD_RECURRING_TRANSACTION';\nexport const UPDATE_RECURRING_TRANSACTION = 'UPDATE_RECURRING_TRANSACTION';\nexport const REMOVE_RECURRING_TRANSACTION = 'REMOVE_RECURRING_TRANSACTION';\n\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION';\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION';\nexport const REMOVE_TRANSACTION = 'REMOVE_TRANSACTION';\n\nexport interface TransactionAction {\n    type: string;\n    transaction: Transaction;\n};\n\n\nexport const updateTransaction = (transaction: Transaction, label: string, amount: number, category: string, date: Date | undefined) => ({ \n    type: transaction.isReccuring ? UPDATE_RECURRING_TRANSACTION : UPDATE_TRANSACTION, \n    transaction: {\n        ...transaction,\n        label,\n        category,\n        amount,\n        date\n    } });\n\nexport const addTransaction = (label: string, amount: number, category: string, date: Date | undefined, recurring: boolean = false) => ({ \n    type: recurring ? ADD_RECURRING_TRANSACTION : ADD_TRANSACTION,\n    transaction: { \n        transaction_id: Crypto.randomUUID(),\n        owner_id: '123', // how to handle that ??\n        label,\n        amount,\n        category,\n        date,\n        month: recurring || !date ? new Date().getMonth() : date.getMonth(),\n        fullYear: recurring || !date ? new Date().getFullYear() : date.getFullYear(),\n        isReccuring: recurring\n    }\n});\n\nexport const removeTransaction = (transaction: Transaction) => ({ \n    type: transaction.isReccuring ? REMOVE_RECURRING_TRANSACTION : REMOVE_TRANSACTION, \n    transaction });\n","import { Category } from \"../models/Category\";\n\nexport const ADD_CATEGORY = 'ADD_CATEGORY';\nexport const REMOVE_CATEGORY = 'REMOVE_CATEGORY';\n\nexport interface CategoryAction {\n    type: string;\n    category: Category;\n};\n\nconst colors = [\n    \"#f5a572\",\n    \"#f39893\",\n    \"#7a87a4\",\n    \"#abd194\",\n    \"#23888a\",\n    \"#51bab5\",\n    \"#b98ac0\",\n    \"#7ac2db\",\n    \"#84a1c1\",\n    \"#f1c85e\"\n];\n\nexport const addCategory = (label: String) => ({ type: ADD_CATEGORY, category: { label, color: colors[Math.floor(Math.random() * 10)]} });\nexport const removeCategory = (label: String) => ({ type: REMOVE_CATEGORY, category: { label, color: colors[Math.floor(Math.random() * 10)]} });\n\n","import { Alert, Button, Modal, Pressable, StyleSheet, Text, TextInput, View, Platform, FlatList } from \"react-native\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useEffect, useState } from \"react\";\nimport { DateTimePickerAndroid } from \"@react-native-community/datetimepicker\";\nimport { Transaction } from \"../models/transaction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTransaction, removeTransaction, updateTransaction } from \"../actions/transactions\";\nimport { date } from \"../services/DateAsString\";\nimport { addCategory, removeCategory } from \"../actions/categories\";\nimport { Category } from \"../models/Category\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\n\n\nfunction CategoryItem(props) {\n  const item: Category = props.item;\n\n  function selectCategory(): void {\n    props.onCategorySelected(item.label);\n  }\n  function removeItem(): void {\n    props.onCategoryRemoved(item.label)\n  }\n\n  return (\n    <Pressable style={[categoryItemStyle.item, { backgroundColor: item.color, flexDirection: \"row\"}]} onPress={() => selectCategory()} >\n      <Text style={categoryItemStyle.text}>{item.label}</Text>\n      <Ionicons name=\"md-trash-bin\" size={20} color=\"#ff0054\" style={{zIndex: 3, height: 20, marginLeft: \"auto\", alignSelf: \"baseline\" }} onPress={ () => removeItem()} />\n    </Pressable>\n  );\n}\n\nconst categoryItemStyle = StyleSheet.create({\n  text: {\n    color: \"#fff\",\n    fontSize: 15,\n    fontWeight: \"bold\"\n  },\n  item: {\n    backgroundColor: \"#525174\",\n    color: \"#fff\",\n    borderRadius: 10,\n    padding: 10,\n    margin: 1\n  }\n});\n\n\nexport function ItemEdition(props) {\n  const item: Transaction = props.item;\n  const isExpense: boolean = props.isExpense;\n\n  const dispatch = useDispatch();\n\n  const categories = useSelector( state => state.categories);\n  \n  \n  const [newCategory, setNewCategory] = useState(\"Nouvelle catégorie\");\n\n  const [amountStr, setAmountStr] = useState(item.amount.toString());\n  const [startDate, setStartDate] = useState(new Date(item.date));\n  const [category, setCategory] = useState(item.category);\n  const [label, setLabel] = useState(item.label);\n  const [confimationModalVisible, setConfimationModalVisible] = useState(false);\n  const [categoryModalVisible, setCategoryModalVisible] = useState(false);\n  const [saveDisabled, setSaveDisabled] = useState(true);\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    if (amountStr && label) {\n      setSaveDisabled(false);\n    } else {\n      setSaveDisabled(true);\n    }\n\n  }, [amountStr, label]);\n\n\n  function saveItem() {\n    if (validateAmountNumber() && !saveDisabled) {\n      let amount = getCorrectNumber();\n      const date = item.isReccuring ? undefined : startDate? new Date(startDate) : new Date();\n      console.log(date)\n      if(item.transaction_id) {\n        dispatch(updateTransaction(item, label, amount, category, date));\n      } else {\n        dispatch(addTransaction(label, amount, category, date, item.isReccuring));\n      }\n      back();\n    }\n  }\n\n  function back() {\n    if(item.isReccuring) {\n      navigation.navigate(\"RecurringConfigurationPage\");\n    } else {\n      navigation.navigate(\"HomePage\");\n    }\n  }\n\n  function cancel(): void {\n    back();\n  }\n\n  const onStartDateChange = (event, selectedDate) => {\n    const currentDate = selectedDate;\n    setStartDate(currentDate);\n  };\n\n  const showDatePicker = () => {\n    validateAmountNumber();\n    const today = new Date();\n    if(Platform.OS === 'android') {\n      DateTimePickerAndroid.open({\n        value: startDate ? startDate : new Date(),\n        onChange: onStartDateChange,\n        mode: 'date',\n        maximumDate: today,\n        minimumDate: new Date(today.getFullYear(), today.getMonth(), 1)\n      });\n    }\n  };\n\n  const getCorrectNumber = () => {\n    let amountNbr = Math.abs(Number(amountStr));\n    if (isExpense) {\n      amountNbr *= -1;\n    }\n    return amountNbr;\n  }\n\n  const validateAmountNumber = () => {\n    let amountNbr = getCorrectNumber();\n    if (Number.isNaN(amountNbr)) {\n      setAmountStr(item.amount.toFixed(2));\n      return false;\n    } else {\n      setAmountStr(amountNbr.toFixed(2));\n    }\n    return true;\n  }\n\n\n  function openConfirmModal() {\n    setConfimationModalVisible(true);\n  }\n\n\n  function deleteTransaction() {\n    setConfimationModalVisible(false);\n    dispatch(removeTransaction(item));\n    back();\n  }\n\n  function showCategoriesModal(): void {\n    validateAmountNumber();\n    setCategoryModalVisible(true);\n  }\n  \n  function selectCategory(category: string): void {\n    setCategory(category);\n    setCategoryModalVisible(false);\n  }\n\n  function saveNewCategory(category: string): void {\n    dispatch(addCategory(category));\n    selectCategory(category);\n  }\n\n  return (\n    <View style={{ paddingTop: 20 }}  >\n\n      <View style={{ flexDirection: \"row\" }}>\n        {isExpense ? <Text style={itemStyle.header}>Nom de la dépense</Text> : <Text style={itemStyle.header}>Nom du revenu</Text>}\n        {item.transaction_id && <Pressable style={{ marginLeft: \"auto\", marginRight: 10 }} onPress={() => openConfirmModal()} >\n          <Text style={{ color: \"#ff0054\" }}>Supprimer</Text>\n        </Pressable>}\n      </View>\n\n      <TextInput selectTextOnFocus autoFocus style={itemStyle.container} value={label} onChangeText={(label) => { setLabel(label) }} />\n      <Text style={itemStyle.header}>Montant</Text>\n      <TextInput selectTextOnFocus keyboardType={'numeric'} \n        style={[itemStyle.container]} \n        value={amountStr}\n        onChangeText={(amount) => { setAmountStr(amount) }}\n        onBlur={() => validateAmountNumber()}\n      />\n      {/* <Text style={itemStyle.header}>Catégorie</Text>\n      <TextInput selectTextOnFocus style={itemStyle.container} value={category} onChangeText={(category) => { setCategory(category) }} /> */}\n\n      { !item.isReccuring && Platform.OS === 'android' && \n        <>\n          <Text style={itemStyle.header}>Date</Text>\n          <Pressable onPress={() => showDatePicker()} style={itemStyle.container}>\n            <Text style={[{ color: \"#525174\", fontSize: 15 }]}>{date.AsString(startDate)}</Text>\n          </Pressable>\n        </>\n      }\n      <>\n        <Text style={itemStyle.header}>Catégorie</Text>\n        <Pressable onPress={() => showCategoriesModal()} style={itemStyle.container}>\n          <Text style={{ color: \"#525174\", fontSize: 15 }}>{ category }</Text>\n        </Pressable>\n      </>\n\n\n      <View style={{ paddingTop: 20, flexDirection: \"row\", justifyContent: \"space-around\" }}  >\n        <Button onPress={cancel} title=\"Annuler\" color=\"#ff0054\" />\n        <Button onPress={saveItem} title=\"Sauver\" color=\"#2ec4b6\" disabled={saveDisabled} />\n      </View>\n\n      <View style={modalStyles.centeredView}>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={confimationModalVisible}\n          onRequestClose={() => {\n            Alert.alert('Modal has been closed.');\n            setConfimationModalVisible(!confimationModalVisible);\n          }}>\n          <View style={modalStyles.centeredView}>\n            <View style={modalStyles.modalView}>\n              <Text style={modalStyles.modalText}>Supprimer cette transaction ?</Text>\n              <View style={ {flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                <Button onPress={() => setConfimationModalVisible(false)} title=\"Non\" color=\"#ff0054\" />\n                <Button onPress={deleteTransaction} title=\"Oui\" color=\"#2ec4b6\" />\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </View>\n\n\n      <View style={modalStyles.centeredView}>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={categoryModalVisible}>\n          <View style={modalStyles.centeredView}>\n            <View style={modalStyles.modalView}>\n              \n              <View style={{ flex: 1}}>\n                <Text>Choisissez une catégorie existante</Text>\n                <FlatList \n                    data={categories}\n                    renderItem={({item}) => <CategoryItem item={item} onCategorySelected={(category: string) => selectCategory(category)} onCategoryRemoved={(category: string) => dispatch(removeCategory(category)) }></CategoryItem>}\n                />\n              </View>\n              <View style={{ marginBottom: 30}}>\n                <Text>Ou entrez une nouvelle catégorie</Text>\n                <TextInput selectTextOnFocus\n                  style={[categoryItemStyle.item]} \n                  value={newCategory}\n                  onChangeText={(label) => { setNewCategory(label) }}\n                />\n              </View>\n              <View style={ {flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                <Button onPress={() => setCategoryModalVisible(false)} title=\"Annuler\" color=\"#ff0054\" />\n                <Button onPress={() => saveNewCategory(newCategory)} title=\"Valider\" color=\"#2ec4b6\" />\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </View>\n\n    </View>\n  );\n}\n\nconst itemStyle = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    borderColor: \"#525174\",\n    borderWidth: 1,\n    padding: 8,\n    margin: 8,\n    height: 40\n  },\n  header: {\n    color: \"#fff\",\n    marginLeft: 10,\n    fontSize: 17,\n    fontWeight: \"bold\"\n  }\n});\n\n\nconst modalStyles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n  },\n  buttonOpen: {\n    backgroundColor: '#F194FF',\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3',\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n});","import { styles } from '../../styles';\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { ItemEdition } from \"../components/ItemEdition\";\nimport { Transaction } from '../models/transaction';\n\n\nexport function EditTransactionItemPage( { route } ) {\n\n    const recurring = route.params.recurring;\n    const item: Transaction = route.params.item ?? {\n        label: \"\",\n        amount: 0,\n        category: \"Autre\",\n        date: recurring ? undefined : new Date(),\n        isReccuring: recurring\n    };\n    const isExpense: boolean = route.params.isExpense;\n    return (\n        <SafeAreaView style={[styles.content]}>\n            <ItemEdition item={item} isExpense={isExpense} />\n        </SafeAreaView>\n    );\n}","import { combineReducers } from 'redux';\nimport { ADD_RECURRING_TRANSACTION, ADD_TRANSACTION, REMOVE_RECURRING_TRANSACTION, REMOVE_TRANSACTION, UPDATE_RECURRING_TRANSACTION, UPDATE_TRANSACTION } from \"../actions/transactions\";\nimport { Transaction } from '../models/transaction';\nimport { date } from '../services/DateAsString';\nimport { RESET_STORE, SET_TODAY } from '../actions/global';\nimport { ADD_CATEGORY, REMOVE_CATEGORY } from '../actions/categories';\nimport { INSERT_SAVING } from '../actions/savings';\n\n// https://stackoverflow.com/questions/72748846/modify-android-gradle-properties-in-expo-managed-app\n\n\n\nconst today = new Date();\nconst initialStateRecurringTransactions = {\n    today: undefined,\n    recurringTransactions: [],\n    currentMonthDailyTransactions: [],\n    totalExpenses: 0,\n    totalIncomes: 0,\n    availableMonthlyAmount: 0, // Montant disponible pour le mois\n    availableDailyAmount: 0, // Montant disponible journalier : availableMonthlyAmount divisé par le nombre de jours du mois\n    spentPerDay: [], // Montant dépensé chaque jour, ce mois.\n    theoriticalAvailableAmountPerDay: [], // Montant disponible théorique, chaque jour : availableMonthlyAmount - availableDailyAmount x jour\n    realAvailableAmountPerDay: [], // Montant disponible réel, chaque jour, jusqu'au jour courant : availableMonthlyAmount - sum(spentPerDay[i] , i < jour)\n    allTransactionPerMonth: {}\n}\n\n\nconst getRealAvailableAmountPerDay = (availableMonthlyAmount: number, spentPerDay: number[], today: Date | undefined) : number[] => {\n    let realAvailableAmountPerDay = [];\n    let stackedAvailableAmountPerDay = Number(availableMonthlyAmount);\n    if(today) {\n        const todayDate = new Date(today);\n        for (let i = 0; i < todayDate.getDate(); ++i) {\n            if(spentPerDay.length > i ) {\n                stackedAvailableAmountPerDay = Number(stackedAvailableAmountPerDay) + Number(spentPerDay[i]);\n                realAvailableAmountPerDay.push(stackedAvailableAmountPerDay);\n            } else {\n                realAvailableAmountPerDay.push(stackedAvailableAmountPerDay);\n            }\n        }\n    }\n    return realAvailableAmountPerDay;\n}\n\nconst fillSpendPerDay = (today: Date, iSpent: number[]) => {    \n    let spentPerDay = [...iSpent];\n    for (let i = 0; i < today.getDate(); ++i) {\n        if(spentPerDay.length <= i) {\n            spentPerDay.push(Number(0));\n        }\n    }\n    return spentPerDay\n}\n\nfunction calculateSpendPerDay(today: Date, currentMonthTransactions: Transaction[]): number[] {\n    let spentPerDay: number[] = [];\n    for (let i = 0; i < today.getDate(); ++i) {\n        if(spentPerDay.length <= i) {\n            spentPerDay.push(Number(0));\n        }\n    }\n    currentMonthTransactions.forEach((transaction: Transaction) => {\n        if(transaction.date) {\n            const transactionDate = new Date(transaction.date);\n            if (transactionDate.getMonth() === today.getMonth() && transactionDate.getFullYear() === today.getFullYear()) {\n                spentPerDay[transactionDate.getDate() - 1] += transaction.amount;\n            }\n        }\n    });\n    return spentPerDay;\n}\n\n\n\nconst transactions = (state = initialStateRecurringTransactions, action: any) => {\n    if(action.type !== SET_TODAY && !state.today) {\n        return state;\n    }\n    const today: Date = new Date(action.today ?? state.today);\n    const numberOfDaysInMonth = date.GetNumberOfDaysInCurrentMonth(today);\n    let spentPerDay = [];\n    \n    switch (action.type) {\n        case SET_TODAY:\n            console.log(\"================================ SET_TODAY ?? \")\n\n            const currentMonthTransactions = state.currentMonthDailyTransactions.filter((transaction) => { \n                const d = new Date(transaction.date);\n                return d.getMonth() === today.getMonth() && d.getFullYear() === today.getFullYear();\n            });\n            const pastTransactions = state.currentMonthDailyTransactions.filter((transaction) => {\n                const d = new Date(transaction.date);\n                return d.getMonth() !== today.getMonth() || d.getFullYear() !== today.getFullYear();\n            });\n\n            const dateKey = date.GetMonthKey(today);\n            let allTransactionPerMonth: { [id: string]: any } = state.allTransactionPerMonth;\n            if(!allTransactionPerMonth[dateKey]) {\n                allTransactionPerMonth[dateKey] = {\n                    dailyTransactions: currentMonthTransactions\n                };\n            }\n            pastTransactions.forEach( transaction => {\n                const trxDate = new Date(transaction.date);\n                const trxDateKey = date.GetMonthKey(trxDate);\n                if(allTransactionPerMonth[trxDateKey]) {\n                    const found = allTransactionPerMonth[trxDateKey].dailyTransactions.find(element => element.transaction_id === transaction.transaction_id);\n                    if(!found) {\n                        allTransactionPerMonth[trxDateKey].dailyTransactions.push(transaction);\n                    }\n                } else {\n                    allTransactionPerMonth[trxDateKey] = {\n                        dailyTransactions: [transaction]\n                    };\n                }\n\n            })\n            let lastMonth = new Date(today);\n            lastMonth.setDate(1);\n            lastMonth.setMonth(lastMonth.getMonth()-1);\n            let lastMonthKey = date.GetMonthKey(lastMonth);\n            while(allTransactionPerMonth[lastMonthKey]) {\n                if(!allTransactionPerMonth[lastMonthKey].recurringTransactions) {\n                    allTransactionPerMonth[lastMonthKey] = {\n                        ...allTransactionPerMonth[lastMonthKey],\n                        recurringTransactions: state.recurringTransactions\n                    };\n                }\n                lastMonth.setMonth(lastMonth.getMonth()-1);\n                lastMonthKey = date.GetMonthKey(lastMonth);\n            }\n            \n            console.log(\"allTransactionPerMonth: \" , allTransactionPerMonth)\n\n            spentPerDay = calculateSpendPerDay(today, currentMonthTransactions);\n            return {\n                ...state,\n                allTransactionPerMonth,\n                today: action.today,\n                currentMonthDailyTransactions: currentMonthTransactions,\n                pastDailyTransactions: pastTransactions,\n                spentPerDay: spentPerDay,\n                realAvailableAmountPerDay: getRealAvailableAmountPerDay(state.availableMonthlyAmount, spentPerDay, today)\n            }\n        case ADD_RECURRING_TRANSACTION: {\n            const newRecurringTransactions = [...state.recurringTransactions, action.transaction];\n            const availableMonthlyAmount = state.availableMonthlyAmount + action.transaction.amount;\n            const availableDailyAmount = Number((availableMonthlyAmount / numberOfDaysInMonth));\n            let theoriticalAvailableAmountPerDay = [];\n            for (let i = 1; i <= numberOfDaysInMonth; ++i) {\n                theoriticalAvailableAmountPerDay.push(Number(availableMonthlyAmount - (i * availableDailyAmount)));\n            }\n            return {\n                ...state,\n                recurringTransactions: newRecurringTransactions,\n                availableMonthlyAmount: availableMonthlyAmount,\n                availableDailyAmount: availableDailyAmount,\n                theoriticalAvailableAmountPerDay: theoriticalAvailableAmountPerDay,\n                realAvailableAmountPerDay: getRealAvailableAmountPerDay(availableMonthlyAmount, state.spentPerDay, state.today)\n            }\n        }\n        case UPDATE_RECURRING_TRANSACTION: {\n            const updatedTransaction: Transaction = action.transaction;\n            const recurringTransactions = state.recurringTransactions.map((transaction: Transaction) => {\n                if (transaction.transaction_id === updatedTransaction.transaction_id) {\n                    return {\n                        ...transaction,\n                        label: updatedTransaction.label,\n                        amount: updatedTransaction.amount,\n                        category: updatedTransaction.category,\n                        isReccuring: true\n                    }\n                } else {\n                    return transaction;\n                }\n            });\n            const totalExpenses = recurringTransactions.reduce((acc, transaction) => {\n                return transaction.amount < 0 ? acc + transaction.amount : acc;\n            }, 0);\n            const totalIncomes = recurringTransactions.reduce((acc, transaction) => {\n                return transaction.amount > 0 ? acc + transaction.amount : acc;\n            }, 0);\n            const availableMonthlyAmount = totalExpenses + totalIncomes;\n            const availableDailyAmount = Number((availableMonthlyAmount / numberOfDaysInMonth));\n            let theoriticalAvailableAmountPerDay = [];\n            for (let i = 1; i <= numberOfDaysInMonth; ++i) {\n                theoriticalAvailableAmountPerDay.push(Number(availableMonthlyAmount - (i * availableDailyAmount)));\n            }\n            return {\n                ...state,\n                recurringTransactions: recurringTransactions,\n                availableMonthlyAmount: availableMonthlyAmount,\n                availableDailyAmount: availableDailyAmount,\n                theoriticalAvailableAmountPerDay: theoriticalAvailableAmountPerDay,\n                realAvailableAmountPerDay: getRealAvailableAmountPerDay(availableMonthlyAmount, state.spentPerDay, today)\n            };\n        }\n        case REMOVE_RECURRING_TRANSACTION: {\n            const recurringTransactions: Transaction[] = state.recurringTransactions.filter(\n                (transaction: Transaction) => transaction.transaction_id !== action.transaction.transaction_id\n            );\n            const availableMonthlyAmount = recurringTransactions.reduce( (total, transaction) => total + transaction.amount, 0 );\n            const availableDailyAmount = Number((availableMonthlyAmount / numberOfDaysInMonth));\n            let theoriticalAvailableAmountPerDay = [];\n            for (let i = 1; i <= numberOfDaysInMonth; ++i) {\n                theoriticalAvailableAmountPerDay.push(Number(availableMonthlyAmount - (i * availableDailyAmount)));\n            }\n            return {\n                ...state,\n                recurringTransactions: recurringTransactions,\n                availableMonthlyAmount,\n                availableDailyAmount,\n                theoriticalAvailableAmountPerDay,\n                realAvailableAmountPerDay: getRealAvailableAmountPerDay(availableMonthlyAmount, state.spentPerDay, state.today),\n            };\n        }\n        case ADD_TRANSACTION: {\n            let newCurrentMonthDailyTransactions = [...state.currentMonthDailyTransactions];\n            if(action.transaction.date) {\n                const actionDate = action.transaction.date as Date;\n                if (actionDate.getMonth() === today.getMonth() && actionDate.getFullYear() === today.getFullYear()) {\n                    newCurrentMonthDailyTransactions.push(action.transaction);\n                }\n            }\n            spentPerDay = calculateSpendPerDay(today, newCurrentMonthDailyTransactions);\n            return {\n                ...state,\n                currentMonthDailyTransactions: newCurrentMonthDailyTransactions,\n                spentPerDay: spentPerDay,\n                realAvailableAmountPerDay: getRealAvailableAmountPerDay(state.availableMonthlyAmount, spentPerDay, today)\n            }\n        }\n        case UPDATE_TRANSACTION: {\n            const updatedTransaction = action.transaction;\n            const updatedTransactionList = state.currentMonthDailyTransactions.map((transaction) => {\n                if (transaction.transaction_id === updatedTransaction.transaction_id) {\n                    return {\n                        ...transaction,\n                        label: updatedTransaction.label,\n                        amount: updatedTransaction.amount,\n                        category: updatedTransaction.category,\n                        date: updatedTransaction.date\n                    }\n                } else {\n                    return transaction;\n                }\n            });\n            const updatedSpentPerDay = calculateSpendPerDay(today, updatedTransactionList);\n            const updatedRealAvailableAmountPerDay = getRealAvailableAmountPerDay(state.availableMonthlyAmount, updatedSpentPerDay, today);\n            \n            return {\n                ...state,\n                currentMonthDailyTransactions: updatedTransactionList,\n                spentPerDay: updatedSpentPerDay,\n                realAvailableAmountPerDay: updatedRealAvailableAmountPerDay,\n            };\n        }\n        case REMOVE_TRANSACTION: {\n            const removedTransaction = action.transaction;\n            const updatedTransactionList = state.currentMonthDailyTransactions.filter(t => t.transaction_id !== removedTransaction.transaction_id);\n            const updatedSpentPerDay = calculateSpendPerDay(today, updatedTransactionList);\n            const updatedRealAvailableAmountPerDay = getRealAvailableAmountPerDay(state.availableMonthlyAmount, updatedSpentPerDay, today);\n            return {\n                ...state,\n                currentMonthDailyTransactions: updatedTransactionList,\n                spentPerDay: updatedSpentPerDay,\n                realAvailableAmountPerDay: updatedRealAvailableAmountPerDay,\n            };\n        }\n        case RESET_STORE:\n            spentPerDay = fillSpendPerDay(today, []);\n            return {\n                ...initialStateRecurringTransactions,\n                today: action.today,\n                spentPerDay: spentPerDay,\n                realAvailableAmountPerDay: getRealAvailableAmountPerDay(state.availableMonthlyAmount, spentPerDay, today)\n            }\n        default:\n            return state;\n    }\n};\n\nconst categories = (state = [], action: any) => {\n    switch (action.type) {\n        case ADD_CATEGORY:\n            const found = state.find(category => category.label === action.category.label);\n            if(found) {\n                return state;\n            }\n            return [...state, action.category];\n        case REMOVE_CATEGORY:\n            return [...state.filter( category => category.label !== action.category.label )];\n        default:\n            return state;\n    }\n};\n\nconst savings = (state = {}, action: any) => {\n    switch (action.type) {\n        case INSERT_SAVING:\n            let allSavings = { ...state };\n            const newSaving = action.saving;\n            allSavings[newSaving.key] = newSaving;\n            return allSavings;\n        default:\n            return state;\n    }\n};\n\nconst reducers = combineReducers({\n    transactions,\n    categories,\n    savings\n});\n\nexport default reducers;","import { configureStore } from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n  stateReconciler: autoMergeLevel2,\n  version: 1,\n  // https://github.com/rt2zz/redux-persist/blob/master/docs/migrations.md\n}\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk]\n})\n\n\nconst persistor = persistStore(store);\nconsole.log(\"   --- store.getState() --- \" , store.getState())\n\nexport { store, persistor };\n\n","import { View, Text } from \"react-native\";\nimport { styles } from '../../styles';\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { useSelector } from \"react-redux\";\nimport { MenuBar } from \"../components/MenuBar\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { date } from \"../services/DateAsString\";\n\nexport const StatisticsPage = () => {\n   \n  const navigation = useNavigation();\n  const savings = useSelector( state => state.savings );\n  const allTransactionPerMonth = useSelector( state => state.transactions.allTransactionPerMonth );\n  console.log(\">> allTransactionPerMonth \" , allTransactionPerMonth)\n  console.log(\">> savings \" , savings)\n\n  function renderSavings() {\n    let content = [];\n    for ( let k of Object.keys(savings) ) {\n      content.push(<Text key={k} style={{ color: \"#fff\"}} >{ date.GetKeyDisplay(k) } : { savings[k].amount }</Text> )\n    }\n    \n    return content\n  }\n\n  function renderAllTransactions() {\n    let content = [];\n    console.log(\">>>  renderAllTransactions: \" , allTransactionPerMonth)\n    for ( let k of Object.keys(allTransactionPerMonth) ) {\n      content.push(<Text key={k+\"SEP01\"} style={{ color: \"#fff\"}} >---------------------------------------</Text> )\n      content.push(<Text key={k} style={{ color: \"#fff\"}} >{ date.GetKeyDisplay(k) } </Text> )\n      const mT = allTransactionPerMonth[k];\n      content.push(<Text key={k+\"SEP001\"} style={{ color: \"#fff\"}} > ---- DAILY TRANSACTIONS ---- </Text> )\n      let dTTotal = 0;\n      mT.dailyTransactions.forEach( t => {\n        dTTotal += t.amount;\n      })\n      content.push(<Text key={k+\"TOTAL\"} style={{ color: \"#fff\"}} >{ dTTotal } </Text> )\n\n      content.push(<Text key={k+\"SEP002\"} style={{ color: \"#fff\"}} > ---- RECURRING TRANSACTIONS ---- </Text> )\n      let rTTotal = 0;\n      mT.recurringTransactions?.forEach( t => {\n        rTTotal += t.amount;\n      })\n      content.push(<Text key={k+\"TOTAL2\"} style={{ color: \"#fff\"}} >{ rTTotal } </Text> )\n    }\n    \n    return content\n  }\n\n  return (\n      <SafeAreaView style={[styles.content]}>\n          <View style={{ flex: 1}}>\n            { renderSavings() }\n            { renderAllTransactions() }\n          </View>\n          <MenuBar navigation={navigation} recurring={false}></MenuBar>\n      </SafeAreaView>\n  );\n}\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from \"react\";\nimport { HomePage } from './app/pages/HomePage';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { RecurringConfigurationPage } from './app/pages/RecurringConfigurationPage';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { ActivityIndicator, SafeAreaView, View } from \"react-native\";\nimport { EditTransactionItemPage } from './app/pages/EditTransactionItemPage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistor, store } from './app/states/store';\nimport { styles } from './styles';\nimport { StatisticsPage } from './app/pages/StatisticsPage';\n\n\nconst Loading = () => {\n  return (\n    <SafeAreaView style={[styles.content]}>\n      <View style={{ flex: 1, justifyContent: \"center\"}}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst App = () => {\n  // const Stack = createNativeStackNavigator();\n  const Drawer = createDrawerNavigator();\n  const Stack = createNativeStackNavigator();\n\n  let [canProceed, setCanProceed] = useState(false);\n\n  useEffect(() => {\n    setCanProceed(true);\n  }, []);\n  \n  return (\n    <Provider store={store}>\n      {/* <PersistGate persistor={persistor} loading={null}> */}\n        \n        <SafeAreaProvider style= {{ maxWidth: 600, justifyContent: \"center\", marginRight: \"auto\", marginLeft: \"auto\" }}>\n          <StatusBar style=\"auto\"/>\n          { canProceed ?\n            <NavigationContainer>\n              <Stack.Navigator screenOptions={{headerShown: false}}>\n                <Stack.Screen name=\"HomePage\" component={HomePage}/>\n                <Stack.Screen name=\"StatisticsPage\" component={StatisticsPage} />\n                <Stack.Screen name=\"RecurringConfigurationPage\" component={RecurringConfigurationPage} />\n                <Stack.Screen name=\"EditTransactionItemPage\" component={EditTransactionItemPage} />\n              </Stack.Navigator>\n            </NavigationContainer>\n            :\n            <Loading/>\n          }\n        </SafeAreaProvider>\n        \n      {/* </PersistGate> */}\n    </Provider>\n  );\n}\n\nexport default App;\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [530], () => (__webpack_require__(9386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["date","styles","StyleSheet","amountSummary","height","alignItems","justifyContent","white","color","roundTabButton","backgroundColor","borderRadius","elevation","paddingVertical","paddingHorizontal","marginRight","marginLeft","roundTabButtonSelected","roundTabButtonText","button","vCenterContent","marginTop","marginBottom","actionText","fontSize","textAlign","content","flex","bgDark","_date","monthNames","AsDatabaseString","GetNumberOfDaysInCurrentMonth","today","console","log","numberOfDays","Date","getFullYear","getMonth","getDate","GetMonthAsString","AsString","yyyy","dd","mm","dateStr","String","GetFirstDayOfMonth","firstDay","GetLastDayOfMonth","lastDay","GetMonthKey","month","Number","toString","padStart","GetKeyDisplay","key","arr","split","year","AmountSummary","_ref","navigation","numberOfDaysUntilEndOfMonth","availableMonthlyAmount","useSelector","state","transactions","availableDailyAmount","remainingAmountAsPerToday","realAvailableAmountPerDay","at","amountPerDayUntilEndOfMonth","toFixed","dailyAmountSpent","currentMonthDailyTransactions","reduce","acc","transaction","amount","circularProgressRef","createRef","fill","useEffect","_circularProgressRef$","newFill","current","animate","Easing","formatNumber","num","_jsxs","View","style","children","_jsx","Text","fontWeight","flexDirection","paddingBottom","AnimatedCircularProgress","size","width","ref","rotation","arcSweepAngle","lineCap","tintColor","_Fragment","BurndownChart","theoriticalAvailableAmountPerDay","days","dayOfMonth","i","push","getDaysOfMonth","hidePointsAt","getHidePointsAt","withDots","length","alignSelf","LineChart","data","labels","datasets","arguments","undefined","map","_","strokeWidth","Math","min","Dimensions","yLabelsOffset","yAxisSuffix","hidePointsAtIndex","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","fillShadowGradientFrom","fillShadowGradientTo","labelColor","propsForBackgroundLines","strokeOpacity","useShadowColorFromDataset","propsForDots","r","stroke","DailyTransactionItem","props","item","useNavigation","Pressable","onPress","isExpense","navigate","recurring","editItem","itemStyle","container","label","borderColor","borderWidth","padding","LatestTransactions","dailyTransactions","SafeAreaView","Ionicons","name","zIndex","FlatList","sort","a","b","renderItem","MenuBar","isRecurring","margin","bottom","alignContent","TransactionsContainer","RESET_STORE","SET_TODAY","INSERT_SAVING","HomePage","dispatch","useDispatch","recurringTransactions","allTransactionPerMonth","savings","_useState","useState","_useState2","_slicedToArray","savingsModalVisible","setSavingsModalVisible","_useState3","_useState4","currentSaving","setCurrentSaving","_useState5","_useState6","lastMonth","setLastMonth","type","setToday","setDate","setMonth","lastMonthKey","saving","recTrans","dailyTrans","computeSaving","Modal","animationType","transparent","visible","onRequestClose","modalStyles","centeredView","modalView","modalHeader","modalText","Button","savingDate","saving_id","Crypto","randomUUID","title","shadowColor","shadowOffset","shadowOpacity","shadowRadius","buttonOpen","buttonClose","textStyle","RecurringItem","endDate","RecurringTransactions","RecurringConfigurationPage","selectedTab","setSelectedTab","expensesItems","setExpensesItems","incomesItems","setIncomesItems","expenses","filter","incomes","addListener","e","preventDefault","ADD_RECURRING_TRANSACTION","UPDATE_RECURRING_TRANSACTION","REMOVE_RECURRING_TRANSACTION","ADD_TRANSACTION","UPDATE_TRANSACTION","REMOVE_TRANSACTION","updateTransaction","category","isReccuring","_objectSpread","addTransaction","transaction_id","owner_id","fullYear","removeTransaction","ADD_CATEGORY","REMOVE_CATEGORY","colors","addCategory","floor","random","removeCategory","CategoryItem","categoryItemStyle","onCategorySelected","text","onCategoryRemoved","ItemEdition","categories","newCategory","setNewCategory","amountStr","setAmountStr","startDate","setStartDate","_useState7","_useState8","setCategory","_useState9","_useState10","setLabel","_useState11","_useState12","confimationModalVisible","setConfimationModalVisible","_useState13","_useState14","categoryModalVisible","setCategoryModalVisible","_useState15","_useState16","saveDisabled","setSaveDisabled","back","onStartDateChange","event","selectedDate","getCorrectNumber","amountNbr","abs","validateAmountNumber","isNaN","selectCategory","paddingTop","header","TextInput","selectTextOnFocus","autoFocus","value","onChangeText","keyboardType","onBlur","Platform","DateTimePickerAndroid","onChange","mode","maximumDate","minimumDate","showDatePicker","disabled","Alert","saveNewCategory","EditTransactionItemPage","_route$params$item","route","params","initialStateRecurringTransactions","totalExpenses","totalIncomes","spentPerDay","getRealAvailableAmountPerDay","stackedAvailableAmountPerDay","todayDate","calculateSpendPerDay","currentMonthTransactions","forEach","transactionDate","reducers","combineReducers","_action$today","action","numberOfDaysInMonth","d","pastTransactions","dateKey","trxDate","trxDateKey","find","element","pastDailyTransactions","newRecurringTransactions","concat","_toConsumableArray","updatedTransaction","total","newCurrentMonthDailyTransactions","actionDate","updatedTransactionList","updatedSpentPerDay","updatedRealAvailableAmountPerDay","removedTransaction","t","iSpent","fillSpendPerDay","allSavings","newSaving","persistConfig","storage","AsyncStorage","stateReconciler","autoMergeLevel2","version","persistedReducer","persistReducer","store","configureStore","reducer","middleware","thunk","persistStore","getState","StatisticsPage","k","Object","keys","renderSavings","_loop","_mT$recurringTransact","mT","dTTotal","rTTotal","renderAllTransactions","Loading","ActivityIndicator","createDrawerNavigator","Stack","createNativeStackNavigator","canProceed","setCanProceed","Provider","SafeAreaProvider","maxWidth","StatusBar","NavigationContainer","Navigator","screenOptions","headerShown","Screen","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","this","then","ns","create","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}